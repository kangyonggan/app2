<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kangyonggan.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.kangyonggan.model.Article">
        <!--
          WARNING - @mbggenerated
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="summary" jdbcType="VARCHAR" property="summary"/>
        <result column="tags" jdbcType="VARCHAR" property="tags"/>
        <result column="category_code" jdbcType="VARCHAR" property="categoryCode"/>
        <result column="category_name" jdbcType="VARCHAR" property="categoryName"/>
        <result column="visitors" jdbcType="VARCHAR" property="visitors"/>
        <result column="top" jdbcType="INTEGER" property="top"/>
        <result column="low" jdbcType="INTEGER" property="low"/>
        <result column="star" jdbcType="INTEGER" property="star"/>
        <result column="reply" jdbcType="INTEGER" property="reply"/>
        <result column="sticky" jdbcType="TINYINT" property="sticky"/>
        <result column="sticky_time" jdbcType="TIMESTAMP" property="stickyTime"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
        <result column="body" jdbcType="LONGVARCHAR" property="body"/>

        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="sign" jdbcType="VARCHAR" property="sign"/>
        <result column="total" jdbcType="INTEGER" property="total"/>
        <result column="small_avatar" jdbcType="VARCHAR" property="smallAvatar"/>
    </resultMap>

    <select id="selectArticlesByCategoryCode" resultMap="BaseResultMap">
        SELECT
        a.*, u.realname, u.sign, u.small_avatar
        FROM
        article a, user u
        <where>
            a.user_id = u.id
            AND a.is_deleted = 0
            <if test="categoryCode != null and categoryCode != ''">
                AND a.category_code = #{categoryCode}
            </if>
        </where>
        ORDER BY
        a.sticky desc, a.sticky_time desc, a.id desc
    </select>

    <select id="selectArticleById" resultMap="BaseResultMap">
        SELECT
        a.*, u.realname, u.sign, u.small_avatar
        FROM
        article a, user u
        <where>
            a.user_id = u.id
            AND a.is_deleted = 0
            AND a.id = #{id}
        </where>
    </select>

    <insert id="insertArticleUser">
        INSERT INTO
        article_user (article_id, user_id, type)
        VALUES
        (#{articleId}, #{userId}, #{type})
    </insert>

    <select id="selectArticleUser" resultType="Integer">
        SELECT COUNT(*)
        FROM article_user
        <where>
            article_id = #{articleId}
            AND user_id = #{userId}
            AND type = #{type}
        </where>
    </select>

    <delete id="deleteArticleUser">
        DELETE FROM
        article_user
        <where>
            article_id = #{articleId}
            AND user_id = #{userId}
            AND type = #{type}
        </where>
    </delete>

    <select id="selectStarArticles" resultMap="BaseResultMap">
        SELECT
        a.*, u.realname, u.sign, u.small_avatar
        FROM
        article a, user u, article_user au
        <where>
            au.user_id = #{userId}
            AND au.article_id = a.id
            AND a.user_id = u.id
            AND au.type = 'star'
            AND a.is_deleted = 0
        </where>
        ORDER BY
        a.sticky desc, a.sticky_time desc, a.id desc
    </select>

    <select id="selectArticlesInIds" resultMap="BaseResultMap">
        SELECT
        DISTINCT a.*, u.realname, u.sign, u.small_avatar
        FROM
        article a, user u
        <where>
            a.user_id = u.id
            AND a.is_deleted = 0
            AND a.id IN
            <foreach collection="articleIds" item="articleId" open="(" close=")" separator=",">
                #{articleId}
            </foreach>
        </where>
    </select>

    <select id="selectTotalArticleByUserId" parameterType="Long" resultMap="BaseResultMap">
        SELECT
        COUNT(*) AS total, SUM(top) AS top, SUM(low) AS low
        FROM
        article a
        <where>
             a.user_id = #{userId}
        </where>
    </select>

    <select id="selectTotalArticleByUserIdWithGroup" resultMap="BaseResultMap">
        SELECT
        COUNT(*) AS total, category_code
        FROM
        article a
        <where>
            a.user_id = #{userId}
            AND category_code = #{group}
        </where>
        GROUP BY category_code
    </select>

</mapper>